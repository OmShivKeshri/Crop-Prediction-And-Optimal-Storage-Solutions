// include the library code: #include <LiquidCrystal.h> String ssid = "Simulator Wifi"; // SSID to connect to String password = ""; // Our virtual wifi has no password (so dont do your banking stuff on this network) String host = "api.thingspeak.com"; const int httpPort = 80; String uri = "/update?api_key=4KX4W2HOJN97F3H2&field1="; // initialize the library with the numbers of the interface pins LiquidCrystal lcd(12, 11, 5, 4, 3, 2); int gasSensor = A0; void setup() { // set up the LCD's number of columns and rows: lcd.begin(16, 2); pinMode(gasSensor, INPUT); // Print a message to the LCD. //Serial.begin(9600); setupESP8266(); lcd.print("Gas Level"); } int setupESP8266(void) { // Start our ESP8266 Serial Communication Serial.begin(115200); Serial.println("AT"); delay(10); if (!Serial.find("OK")) return 1; // Connect to Simulator Wifi Serial.println("AT+CWJAP=\"" + ssid + "\",\"" + password + "\""); delay(10); if (!Serial.find("OK")) return 2; // Open TCP connection to the host: Serial.println("AT+CIPSTART=\"TCP\",\"" + host + "\"," + httpPort); delay(50); if (!Serial.find("OK")) return 3;
return 0; } void sendData(int data) { String httpPacket = "GET " + uri + String(data) + " HTTP/1.1\r\nHost: " + host + "\r\n\r\n"; int length = httpPacket.length(); Serial.print("AT+CIPSEND="); Serial.println(length); delay(10); // Wait a little for the ESP to respond if (!Serial.find(">")) return -1; // Send our http request Serial.print(httpPacket); delay(10); // Wait a little for the ESP to respond if (!Serial.find("SEND OK\r\n")) return; } void loop() { // set the cursor to column 0, line 1 // (note: line 1 is the second row, since counting begins with 0): lcd.setCursor(0, 1); lcd.print("Gas Level"); // print the number of seconds since reset: int sensorValue = analogRead(gasSensor); lcd.setCursor(0, 0); lcd.print(sensorValue); sendData(sensorValue); delay(480); lcd.clear(); }